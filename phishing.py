import sys
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Load dataset
data = pd.read_csv("urldata.csv")

# Split data into training and testing sets
train_data, test_data = train_test_split(data, test_size=0.2, random_state=0)

X_train = train_data["url"]
y_train = train_data["label"]
X_test = test_data["url"]
y_test = test_data["label"]

# Vectorize text data using CountVectorizer
vectorizer = CountVectorizer()
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# Train a Multinomial Naive Bayes model
model = LogisticRegression(max_iter=1000)
model.fit(X_train_vec, y_train)

# Evaluate model performance on testing set
y_pred = model.predict(X_test_vec)
accuracy = accuracy_score(y_test, y_pred)

print(accuracy)
new_website = sys.argv[1]

# Preprocess the new website using the same vectorizer
new_website_features = vectorizer.transform([new_website])

# Predict the label of the new website
prediction = model.predict(new_website_features)
print(prediction[0])
